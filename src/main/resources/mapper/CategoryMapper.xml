<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jnxaread.dao.CategoryMapper">
  <resultMap id="BaseResultMap" type="com.jnxaread.bean.Category">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="fictionCount" jdbcType="INTEGER" property="fictionCount" />
    <result column="chapterCount" jdbcType="INTEGER" property="chapterCount" />
    <result column="commentCount" jdbcType="INTEGER" property="commentCount" />
    <result column="visible" jdbcType="INTEGER" property="visible" />
    <result column="restricted" jdbcType="INTEGER" property="restricted" />
    <result column="fictionLocked" jdbcType="BIT" property="fictionLocked" />
    <result column="chapterLocked" jdbcType="BIT" property="chapterLocked" />
    <result column="commentLocked" jdbcType="BIT" property="commentLocked" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
    <result column="managerId" jdbcType="INTEGER" property="managerId" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, description, fictionCount, chapterCount, commentCount, visible, restricted, 
    fictionLocked, chapterLocked, commentLocked, userId, managerId, deleted, createTime
  </sql>
  <select id="selectByExample" parameterType="com.jnxaread.bean.CategoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from Category
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from Category
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jnxaread.bean.CategoryExample">
    delete from Category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jnxaread.bean.Category">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into Category (name, description, fictionCount,
      chapterCount, commentCount, visible, 
      restricted, fictionLocked, chapterLocked, 
      commentLocked, userId, managerId, 
      deleted, createTime)
    values (#{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{fictionCount,jdbcType=INTEGER}, 
      #{chapterCount,jdbcType=INTEGER}, #{commentCount,jdbcType=INTEGER}, #{visible,jdbcType=INTEGER}, 
      #{restricted,jdbcType=INTEGER}, #{fictionLocked,jdbcType=BIT}, #{chapterLocked,jdbcType=BIT}, 
      #{commentLocked,jdbcType=BIT}, #{userId,jdbcType=INTEGER}, #{managerId,jdbcType=INTEGER}, 
      #{deleted,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.jnxaread.bean.Category">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into Category
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="fictionCount != null">
        fictionCount,
      </if>
      <if test="chapterCount != null">
        chapterCount,
      </if>
      <if test="commentCount != null">
        commentCount,
      </if>
      <if test="visible != null">
        visible,
      </if>
      <if test="restricted != null">
        restricted,
      </if>
      <if test="fictionLocked != null">
        fictionLocked,
      </if>
      <if test="chapterLocked != null">
        chapterLocked,
      </if>
      <if test="commentLocked != null">
        commentLocked,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="managerId != null">
        managerId,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="fictionCount != null">
        #{fictionCount,jdbcType=INTEGER},
      </if>
      <if test="chapterCount != null">
        #{chapterCount,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="visible != null">
        #{visible,jdbcType=INTEGER},
      </if>
      <if test="restricted != null">
        #{restricted,jdbcType=INTEGER},
      </if>
      <if test="fictionLocked != null">
        #{fictionLocked,jdbcType=BIT},
      </if>
      <if test="chapterLocked != null">
        #{chapterLocked,jdbcType=BIT},
      </if>
      <if test="commentLocked != null">
        #{commentLocked,jdbcType=BIT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="managerId != null">
        #{managerId,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jnxaread.bean.CategoryExample" resultType="java.lang.Long">
    select count(*) from Category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Category
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.fictionCount != null">
        fictionCount = #{record.fictionCount,jdbcType=INTEGER},
      </if>
      <if test="record.chapterCount != null">
        chapterCount = #{record.chapterCount,jdbcType=INTEGER},
      </if>
      <if test="record.commentCount != null">
        commentCount = #{record.commentCount,jdbcType=INTEGER},
      </if>
      <if test="record.visible != null">
        visible = #{record.visible,jdbcType=INTEGER},
      </if>
      <if test="record.restricted != null">
        restricted = #{record.restricted,jdbcType=INTEGER},
      </if>
      <if test="record.fictionLocked != null">
        fictionLocked = #{record.fictionLocked,jdbcType=BIT},
      </if>
      <if test="record.chapterLocked != null">
        chapterLocked = #{record.chapterLocked,jdbcType=BIT},
      </if>
      <if test="record.commentLocked != null">
        commentLocked = #{record.commentLocked,jdbcType=BIT},
      </if>
      <if test="record.userId != null">
        userId = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.managerId != null">
        managerId = #{record.managerId,jdbcType=INTEGER},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Category
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      fictionCount = #{record.fictionCount,jdbcType=INTEGER},
      chapterCount = #{record.chapterCount,jdbcType=INTEGER},
      commentCount = #{record.commentCount,jdbcType=INTEGER},
      visible = #{record.visible,jdbcType=INTEGER},
      restricted = #{record.restricted,jdbcType=INTEGER},
      fictionLocked = #{record.fictionLocked,jdbcType=BIT},
      chapterLocked = #{record.chapterLocked,jdbcType=BIT},
      commentLocked = #{record.commentLocked,jdbcType=BIT},
      userId = #{record.userId,jdbcType=INTEGER},
      managerId = #{record.managerId,jdbcType=INTEGER},
      deleted = #{record.deleted,jdbcType=BIT},
      createTime = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jnxaread.bean.Category">
    update Category
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="fictionCount != null">
        fictionCount = #{fictionCount,jdbcType=INTEGER},
      </if>
      <if test="chapterCount != null">
        chapterCount = #{chapterCount,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        commentCount = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="visible != null">
        visible = #{visible,jdbcType=INTEGER},
      </if>
      <if test="restricted != null">
        restricted = #{restricted,jdbcType=INTEGER},
      </if>
      <if test="fictionLocked != null">
        fictionLocked = #{fictionLocked,jdbcType=BIT},
      </if>
      <if test="chapterLocked != null">
        chapterLocked = #{chapterLocked,jdbcType=BIT},
      </if>
      <if test="commentLocked != null">
        commentLocked = #{commentLocked,jdbcType=BIT},
      </if>
      <if test="userId != null">
        userId = #{userId,jdbcType=INTEGER},
      </if>
      <if test="managerId != null">
        managerId = #{managerId,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jnxaread.bean.Category">
    update Category
    set name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      fictionCount = #{fictionCount,jdbcType=INTEGER},
      chapterCount = #{chapterCount,jdbcType=INTEGER},
      commentCount = #{commentCount,jdbcType=INTEGER},
      visible = #{visible,jdbcType=INTEGER},
      restricted = #{restricted,jdbcType=INTEGER},
      fictionLocked = #{fictionLocked,jdbcType=BIT},
      chapterLocked = #{chapterLocked,jdbcType=BIT},
      commentLocked = #{commentLocked,jdbcType=BIT},
      userId = #{userId,jdbcType=INTEGER},
      managerId = #{managerId,jdbcType=INTEGER},
      deleted = #{deleted,jdbcType=BIT},
      createTime = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>