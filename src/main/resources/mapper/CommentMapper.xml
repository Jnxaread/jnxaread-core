<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jnxaread.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="com.jnxaread.bean.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="fictionId" jdbcType="INTEGER" property="fictionId" />
    <result column="chapterId" jdbcType="INTEGER" property="chapterId" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="anonymous" jdbcType="BIT" property="anonymous" />
    <result column="hided" jdbcType="BIT" property="hided" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.jnxaread.bean.Comment">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, fictionId, chapterId, userId, createTime, anonymous, hided, deleted
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.jnxaread.bean.CommentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.jnxaread.bean.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jnxaread.bean.CommentExample">
    delete from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jnxaread.bean.Comment">
    insert into comment (id, fictionId, chapterId,
      userId, createTime, anonymous,
      hided, deleted, content
      )
    values (#{id,jdbcType=INTEGER}, #{fictionId,jdbcType=INTEGER}, #{chapterId,jdbcType=INTEGER},
      #{userId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{anonymous,jdbcType=BIT},
      #{hided,jdbcType=BIT}, #{deleted,jdbcType=BIT}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jnxaread.bean.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fictionId != null">
        fictionId,
      </if>
      <if test="chapterId != null">
        chapterId,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="anonymous != null">
        anonymous,
      </if>
      <if test="hided != null">
        hided,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fictionId != null">
        #{fictionId,jdbcType=INTEGER},
      </if>
      <if test="chapterId != null">
        #{chapterId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="anonymous != null">
        #{anonymous,jdbcType=BIT},
      </if>
      <if test="hided != null">
        #{hided,jdbcType=BIT},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jnxaread.bean.CommentExample" resultType="java.lang.Long">
    select count(*) from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.fictionId != null">
        fictionId = #{record.fictionId,jdbcType=INTEGER},
      </if>
      <if test="record.chapterId != null">
        chapterId = #{record.chapterId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        userId = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.anonymous != null">
        anonymous = #{record.anonymous,jdbcType=BIT},
      </if>
      <if test="record.hided != null">
        hided = #{record.hided,jdbcType=BIT},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update comment
    set id = #{record.id,jdbcType=INTEGER},
      fictionId = #{record.fictionId,jdbcType=INTEGER},
      chapterId = #{record.chapterId,jdbcType=INTEGER},
      userId = #{record.userId,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      anonymous = #{record.anonymous,jdbcType=BIT},
      hided = #{record.hided,jdbcType=BIT},
      deleted = #{record.deleted,jdbcType=BIT},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comment
    set id = #{record.id,jdbcType=INTEGER},
      fictionId = #{record.fictionId,jdbcType=INTEGER},
      chapterId = #{record.chapterId,jdbcType=INTEGER},
      userId = #{record.userId,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      anonymous = #{record.anonymous,jdbcType=BIT},
      hided = #{record.hided,jdbcType=BIT},
      deleted = #{record.deleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jnxaread.bean.Comment">
    update comment
    <set>
      <if test="fictionId != null">
        fictionId = #{fictionId,jdbcType=INTEGER},
      </if>
      <if test="chapterId != null">
        chapterId = #{chapterId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        userId = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="anonymous != null">
        anonymous = #{anonymous,jdbcType=BIT},
      </if>
      <if test="hided != null">
        hided = #{hided,jdbcType=BIT},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jnxaread.bean.Comment">
    update comment
    set fictionId = #{fictionId,jdbcType=INTEGER},
      chapterId = #{chapterId,jdbcType=INTEGER},
      userId = #{userId,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      anonymous = #{anonymous,jdbcType=BIT},
      hided = #{hided,jdbcType=BIT},
      deleted = #{deleted,jdbcType=BIT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jnxaread.bean.Comment">
    update comment
    set fictionId = #{fictionId,jdbcType=INTEGER},
      chapterId = #{chapterId,jdbcType=INTEGER},
      userId = #{userId,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      anonymous = #{anonymous,jdbcType=BIT},
      hided = #{hided,jdbcType=BIT},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--========================================================================================-->
  <resultMap extends="ResultMapWithBLOBs" id="ResultMapWithUsername" type="com.jnxaread.bean.wrap.CommentWrap">
    <result column="username" jdbcType="VARCHAR" property="username"/>
    <result column="title" jdbcType="VARCHAR" property="fictionTitle"/>
  </resultMap>
  <select id="findListWidthUsername" parameterType="java.lang.Integer" resultMap="ResultMapWithUsername">
    SELECT comment.createTime,comment.content,comment.hided,comment.deleted,user.username FROM comment,user
    WHERE comment.chapterId=#{chapterId} AND comment.hided=0 AND comment.deleted=0 AND comment.userId=user.id
  </select>
  <select id="findListByUserId" parameterType="java.lang.Integer" resultMap="ResultMapWithUsername">
    SELECT comment.createTime,comment.content,user.username,fiction.title FROM comment,user,fiction
    WHERE comment.userId=#{userId} AND comment.hided=0 AND comment.deleted=0 AND user.id=#{userId} AND comment.fictionId=fiction.id
  </select>
  <!--========================================================================================-->
</mapper>
