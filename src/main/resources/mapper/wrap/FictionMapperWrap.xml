<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jnxaread.dao.wrap.FictionMapperWrap">
  <resultMap extends="com.jnxaread.dao.FictionMapper.BaseResultMap" id="ResultMapWithUsername" type="com.jnxaread.bean.wrap.FictionWrap">
    <result column="category" jdbcType="VARCHAR" property="category"/>
    <result column="username" jdbcType="VARCHAR" property="username"/>
    <result column="lastTime" jdbcType="VARCHAR" property="lastTime"/>
    <result column="lastNumber" jdbcType="VARCHAR" property="lastNumber"/>
    <result column="lastChapter" jdbcType="VARCHAR" property="lastChapter"/>
  </resultMap>
  <select id="findListWithUsername" parameterType="java.lang.Integer" resultMap="ResultMapWithUsername">
    SELECT fmc.id,u.username,fmc.title,fmc.introduction,fmc.chapterCount,fmc.wordCount,fmc.commentCount,fmc.viewCount,ch.number lastNumber,ch.title lastChapter,ch.createTime lastTime FROM
    (SELECT f.id,f.userId,f.title,f.introduction,f.chapterCount,f.wordCount,f.commentCount,f.viewCount,f.visible,f.deleted,mc.id chapterId FROM fiction f,
    (SELECT fictionId,MAX(id) id FROM chapter WHERE restricted&lt;=#{level} AND visible=1 AND deleted=0 GROUP BY fictionId) mc WHERE f.id=mc.fictionId) fmc,chapter ch,user u
    WHERE fmc.userId=u.id AND fmc.chapterId=ch.id AND ch.number!=-1 AND fmc.deleted=0 AND fmc.visible=1
    <if test="userId!=0">
      AND fmc.userId=#{userId}
    </if>
    ORDER BY lastTime DESC LIMIT #{startRow},#{pageSize};
  </select>
  <select id="findOwnListWithUsername" parameterType="java.lang.Integer" resultMap="ResultMapWithUsername">
    SELECT fmc.id,fmc.title,fmc.introduction,fmc.chapterCount,fmc.wordCount,fmc.commentCount,fmc.viewCount,ch.number lastNumber,ch.title lastChapter,ch.createTime lastTime FROM
    (SELECT f.id,f.userId,f.title,f.introduction,f.chapterCount,f.wordCount,f.commentCount,f.viewCount,f.deleted,mc.id chapterId FROM fiction f,(SELECT fictionId,MAX(id) id FROM chapter GROUP BY fictionId) mc WHERE f.id=mc.fictionId) fmc,chapter ch
    WHERE fmc.chapterId=ch.id AND fmc.userId=#{userId} AND fmc.deleted=0
    ORDER BY lastTime DESC LIMIT #{startRow},30;
  </select>
  <select id="findWithUsername" parameterType="java.lang.Integer" resultType="com.jnxaread.bean.wrap.FictionWrap">
    SELECT fiction.id,category.name,user.username,fiction.createTime,fiction.title,fiction.introduction,
    fiction.chapterCount,fiction.wordCount,fiction.commentCount,fiction.viewCount,MAX(chapter.number) lastNumber
    FROM fiction,category,user,chapter
    WHERE fiction.id=#{id} AND fiction.categoryId=category.id AND fiction.userId=user.id AND chapter.fictionId=#{id} AND chapter.deleted=0;
  </select>
  <update id="updateCommentCountByPrimaryKey" parameterType="java.lang.Integer">
    update fiction set commentCount=commentCount+1 where id=#{id}
  </update>
  <update id="updateViewCountByPrimaryKey" parameterType="java.lang.Integer">
    update fiction set viewCount=viewCount+1 where id=#{id}
  </update>
  <update id="updateChapterCountAndWordCountByPrimaryKey" parameterType="java.lang.Integer">
    update fiction set chapterCount=chapterCount+1,wordCount=wordCount+#{wordCount} where id=#{id}
  </update>
</mapper>
