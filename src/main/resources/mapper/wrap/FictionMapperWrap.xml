<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jnxaread.dao.wrap.FictionMapperWrap">
    <resultMap extends="com.jnxaread.dao.FictionMapper.BaseResultMap" id="ResultMapWithUsername"
               type="com.jnxaread.bean.wrap.FictionWrap">
        <result column="category" jdbcType="VARCHAR" property="category"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="lastTime" jdbcType="VARCHAR" property="lastTime"/>
        <result column="lastNumber" jdbcType="VARCHAR" property="lastNumber"/>
        <result column="lastChapter" jdbcType="VARCHAR" property="lastChapter"/>
    </resultMap>
    <select id="findListWithUsername" parameterType="java.lang.Integer" resultMap="ResultMapWithUsername">
        SELECT
        fmc.id,u.username,fmc.title,fmc.introduction,fmc.chapterCount,fmc.wordCount,fmc.commentCount,fmc.viewCount,ch.number
        lastNumber,ch.title lastChapter,ch.createTime lastTime FROM
        (SELECT
        f.id,f.userId,f.title,f.introduction,f.chapterCount,f.wordCount,f.commentCount,f.viewCount,f.visible,f.deleted,mc.id
        chapterId FROM Fiction f,
        (SELECT fictionId,MAX(id) id FROM Chapter WHERE restricted&lt;=#{level} AND visible=1 AND deleted=0 GROUP BY
        fictionId) mc WHERE f.id=mc.fictionId) fmc,Chapter ch,User u
        WHERE fmc.userId=u.id AND fmc.chapterId=ch.id AND ch.number!=-1 AND fmc.deleted=0 AND fmc.visible=1
        <if test="userId!=0">
            AND fmc.userId=#{userId}
        </if>
        ORDER BY lastTime DESC LIMIT #{startRow},#{pageSize};
    </select>
    <select id="findOwnListWithUsername" parameterType="java.lang.Integer" resultMap="ResultMapWithUsername">
        SELECT fmc.id,
               fmc.title,
               fmc.introduction,
               fmc.chapterCount,
               fmc.wordCount,
               fmc.commentCount,
               fmc.viewCount,
               ch.number     lastNumber,
               ch.title      lastChapter,
               ch.createTime lastTime
        FROM (SELECT f.id,
                     f.userId,
                     f.title,
                     f.introduction,
                     f.chapterCount,
                     f.wordCount,
                     f.commentCount,
                     f.viewCount,
                     f.deleted,
                     mc.id chapterId
              FROM Fiction f,
                   (SELECT fictionId, MAX(id) id FROM Chapter GROUP BY fictionId) mc
              WHERE f.id = mc.fictionId) fmc,
             Chapter ch
        WHERE fmc.chapterId = ch.id
          AND fmc.userId = #{userId}
          AND fmc.deleted = 0
        ORDER BY lastTime DESC
        LIMIT #{startRow},30;
    </select>
    <select id="findWithUsername" parameterType="java.lang.Integer" resultType="com.jnxaread.bean.wrap.FictionWrap">
        SELECT Fiction.id,
               Category.name,
               User.username,
               Fiction.createTime,
               Fiction.title,
               Fiction.introduction,
               Fiction.chapterCount,
               Fiction.wordCount,
               Fiction.commentCount,
               Fiction.viewCount,
               MAX(Chapter.number) lastNumber
        FROM Fiction,
             Category,
             User,
             Chapter
        WHERE Fiction.id = #{id}
          AND Fiction.categoryId = Category.id
          AND Fiction.userId = User.id
          AND Chapter.fictionId = #{id}
          AND Chapter.deleted = 0;
    </select>
    <update id="updateCommentCountByPrimaryKey" parameterType="java.lang.Integer">
        update Fiction
        set commentCount=commentCount + 1
        where id = #{id}
    </update>
    <update id="updateViewCountByPrimaryKey" parameterType="java.lang.Integer">
        update Fiction
        set viewCount=viewCount + 1
        where id = #{id}
    </update>
    <update id="updateChapterCountAndWordCountByPrimaryKey" parameterType="java.lang.Integer">
        update Fiction
        set chapterCount=chapterCount + 1,
            wordCount=wordCount + #{wordCount}
        where id = #{id}
    </update>
</mapper>
