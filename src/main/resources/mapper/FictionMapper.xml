<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.FictionMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.bean.Fiction">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="categoryId" jdbcType="INTEGER" property="categoryId" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="chapterCount" jdbcType="INTEGER" property="chapterCount" />
    <result column="wordCount" jdbcType="INTEGER" property="wordCount" />
    <result column="commentCount" jdbcType="INTEGER" property="commentCount" />
    <result column="viewCount" jdbcType="BIGINT" property="viewCount" />
    <result column="restricted" jdbcType="INTEGER" property="restricted" />
    <result column="hided" jdbcType="BIT" property="hided" />
    <result column="contentLocked" jdbcType="BIT" property="contentLocked" />
    <result column="commentLocked" jdbcType="BIT" property="commentLocked" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, categoryId, userId, createTime, title, introduction, chapterCount, wordCount,
    commentCount, viewCount, restricted, hided, contentLocked, commentLocked, deleted
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.bean.FictionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fiction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from fiction
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from fiction
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.bean.FictionExample">
    delete from fiction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.bean.Fiction">
    insert into fiction (id, categoryId, userId,
      createTime, title, introduction,
      chapterCount, wordCount, commentCount,
      viewCount, restricted, hided,
      contentLocked, commentLocked, deleted
      )
    values (#{id,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{title,jdbcType=VARCHAR}, #{introduction,jdbcType=VARCHAR},
      #{chapterCount,jdbcType=INTEGER}, #{wordCount,jdbcType=INTEGER}, #{commentCount,jdbcType=INTEGER},
      #{viewCount,jdbcType=BIGINT}, #{restricted,jdbcType=INTEGER}, #{hided,jdbcType=BIT},
      #{contentLocked,jdbcType=BIT}, #{commentLocked,jdbcType=BIT}, #{deleted,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.bean.Fiction" useGeneratedKeys="true" keyProperty="id">
    insert into fiction
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="categoryId != null">
        categoryId,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="chapterCount != null">
        chapterCount,
      </if>
      <if test="wordCount != null">
        wordCount,
      </if>
      <if test="commentCount != null">
        commentCount,
      </if>
      <if test="viewCount != null">
        viewCount,
      </if>
      <if test="restricted != null">
        restricted,
      </if>
      <if test="hided != null">
        hided,
      </if>
      <if test="contentLocked != null">
        contentLocked,
      </if>
      <if test="commentLocked != null">
        commentLocked,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="chapterCount != null">
        #{chapterCount,jdbcType=INTEGER},
      </if>
      <if test="wordCount != null">
        #{wordCount,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null">
        #{viewCount,jdbcType=BIGINT},
      </if>
      <if test="restricted != null">
        #{restricted,jdbcType=INTEGER},
      </if>
      <if test="hided != null">
        #{hided,jdbcType=BIT},
      </if>
      <if test="contentLocked != null">
        #{contentLocked,jdbcType=BIT},
      </if>
      <if test="commentLocked != null">
        #{commentLocked,jdbcType=BIT},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.bean.FictionExample" resultType="java.lang.Long">
    select count(*) from fiction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update fiction
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.categoryId != null">
        categoryId = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        userId = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.introduction != null">
        introduction = #{record.introduction,jdbcType=VARCHAR},
      </if>
      <if test="record.chapterCount != null">
        chapterCount = #{record.chapterCount,jdbcType=INTEGER},
      </if>
      <if test="record.wordCount != null">
        wordCount = #{record.wordCount,jdbcType=INTEGER},
      </if>
      <if test="record.commentCount != null">
        commentCount = #{record.commentCount,jdbcType=INTEGER},
      </if>
      <if test="record.viewCount != null">
        viewCount = #{record.viewCount,jdbcType=BIGINT},
      </if>
      <if test="record.restricted != null">
        restricted = #{record.restricted,jdbcType=INTEGER},
      </if>
      <if test="record.hided != null">
        hided = #{record.hided,jdbcType=BIT},
      </if>
      <if test="record.contentLocked != null">
        contentLocked = #{record.contentLocked,jdbcType=BIT},
      </if>
      <if test="record.commentLocked != null">
        commentLocked = #{record.commentLocked,jdbcType=BIT},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update fiction
    set id = #{record.id,jdbcType=INTEGER},
      categoryId = #{record.categoryId,jdbcType=INTEGER},
      userId = #{record.userId,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      title = #{record.title,jdbcType=VARCHAR},
      introduction = #{record.introduction,jdbcType=VARCHAR},
      chapterCount = #{record.chapterCount,jdbcType=INTEGER},
      wordCount = #{record.wordCount,jdbcType=INTEGER},
      commentCount = #{record.commentCount,jdbcType=INTEGER},
      viewCount = #{record.viewCount,jdbcType=BIGINT},
      restricted = #{record.restricted,jdbcType=INTEGER},
      hided = #{record.hided,jdbcType=BIT},
      contentLocked = #{record.contentLocked,jdbcType=BIT},
      commentLocked = #{record.commentLocked,jdbcType=BIT},
      deleted = #{record.deleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.bean.Fiction">
    update fiction
    <set>
      <if test="categoryId != null">
        categoryId = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        userId = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="chapterCount != null">
        chapterCount = #{chapterCount,jdbcType=INTEGER},
      </if>
      <if test="wordCount != null">
        wordCount = #{wordCount,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        commentCount = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null">
        viewCount = #{viewCount,jdbcType=BIGINT},
      </if>
      <if test="restricted != null">
        restricted = #{restricted,jdbcType=INTEGER},
      </if>
      <if test="hided != null">
        hided = #{hided,jdbcType=BIT},
      </if>
      <if test="contentLocked != null">
        contentLocked = #{contentLocked,jdbcType=BIT},
      </if>
      <if test="commentLocked != null">
        commentLocked = #{commentLocked,jdbcType=BIT},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.bean.Fiction">
    update fiction
    set categoryId = #{categoryId,jdbcType=INTEGER},
      userId = #{userId,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      chapterCount = #{chapterCount,jdbcType=INTEGER},
      wordCount = #{wordCount,jdbcType=INTEGER},
      commentCount = #{commentCount,jdbcType=INTEGER},
      viewCount = #{viewCount,jdbcType=BIGINT},
      restricted = #{restricted,jdbcType=INTEGER},
      hided = #{hided,jdbcType=BIT},
      contentLocked = #{contentLocked,jdbcType=BIT},
      commentLocked = #{commentLocked,jdbcType=BIT},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--===============================================================================================================-->
  <resultMap extends="BaseResultMap" id="ResultMapWithUsername" type="com.jnxaread.bean.wrap.FictionWrap">
    <result column="category" jdbcType="VARCHAR" property="category"></result>
    <result column="username" jdbcType="VARCHAR" property="username"></result>
    <result column="lastTime" jdbcType="VARCHAR" property="lastTime"></result>
    <result column="lastNumber" jdbcType="VARCHAR" property="lastNumber"></result>
    <result column="lastChapter" jdbcType="VARCHAR" property="lastChapter"></result>
  </resultMap>
  <select id="findListWithUsername" parameterType="java.lang.Integer" resultMap="ResultMapWithUsername">
    SELECT fmc.id,u.username,fmc.title,fmc.introduction,fmc.chapterCount,fmc.wordCount,fmc.commentCount,fmc.viewCount,ch.number lastNumber,ch.title lastChapter,ch.createTime lastTime FROM
    (SELECT f.id,f.userId,f.title,f.introduction,f.chapterCount,f.wordCount,f.commentCount,f.viewCount,f.hided,f.deleted,mc.id chapterId FROM fiction f,(SELECT fictionId,MAX(id) id FROM chapter GROUP BY fictionId) mc WHERE f.id=mc.fictionId) fmc,chapter ch,user u
    WHERE fmc.userId=u.id AND fmc.chapterId=ch.id AND ch.number!=0 AND fmc.deleted=0 AND fmc.hided=0
    <if test="userId!=0">
      AND fmc.userId=#{userId}
    </if>
    ORDER BY lastTime DESC LIMIT #{startRow},30;
  </select>
  <select id="findOwnListWithUsername" parameterType="java.lang.Integer" resultMap="ResultMapWithUsername">
    SELECT fmc.id,fmc.title,fmc.introduction,fmc.chapterCount,fmc.wordCount,fmc.commentCount,fmc.viewCount,ch.number lastNumber,ch.title lastChapter,ch.createTime lastTime FROM
    (SELECT f.id,f.userId,f.title,f.introduction,f.chapterCount,f.wordCount,f.commentCount,f.viewCount,f.deleted,mc.id chapterId FROM fiction f,(SELECT fictionId,MAX(id) id FROM chapter GROUP BY fictionId) mc WHERE f.id=mc.fictionId) fmc,chapter ch
    WHERE fmc.chapterId=ch.id AND fmc.userId=#{userId} AND fmc.deleted=0
    ORDER BY lastTime DESC LIMIT #{startRow},30;
  </select>
  <select id="findWithUsername" parameterType="java.lang.Integer" resultType="com.jnxaread.bean.wrap.FictionWrap">
    SELECT fiction.id,category.name,user.username,fiction.createTime,fiction.title,fiction.introduction,
    fiction.chapterCount,fiction.wordCount,fiction.commentCount,fiction.viewCount
    FROM fiction,category,user WHERE fiction.id=#{id} AND fiction.categoryId=category.id AND fiction.userId=user.id;
  </select>
  <update id="updateViewCountByPrimaryKey" parameterType="java.lang.Integer">
    update fiction set viewCount=viewCount+1 where id=#{id}
  </update>
  <!--===============================================================================================================-->
</mapper>
