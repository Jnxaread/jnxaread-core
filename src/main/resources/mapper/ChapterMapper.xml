<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jnxaread.dao.ChapterMapper">
  <resultMap id="BaseResultMap" type="com.jnxaread.bean.Chapter">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="fictionId" jdbcType="INTEGER" property="fictionId" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="wordCount" jdbcType="INTEGER" property="wordCount" />
    <result column="viewCount" jdbcType="INTEGER" property="viewCount" />
    <result column="hided" jdbcType="BIT" property="hided" />
    <result column="lockedContent" jdbcType="BIT" property="lockedContent" />
    <result column="lockedComment" jdbcType="BIT" property="lockedComment" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.jnxaread.bean.Chapter">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, fictionId, userId, createTime, number, wordCount, viewCount, hided, lockedContent, 
    lockedComment, deleted
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.jnxaread.bean.ChapterExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.jnxaread.bean.ChapterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from chapter
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from chapter
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jnxaread.bean.ChapterExample">
    delete from chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jnxaread.bean.Chapter">
    insert into chapter (id, fictionId, userId, 
      createTime, number, wordCount, 
      viewCount, hided, lockedContent, 
      lockedComment, deleted, content
      )
    values (#{id,jdbcType=INTEGER}, #{fictionId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{number,jdbcType=INTEGER}, #{wordCount,jdbcType=INTEGER}, 
      #{viewCount,jdbcType=INTEGER}, #{hided,jdbcType=BIT}, #{lockedContent,jdbcType=BIT}, 
      #{lockedComment,jdbcType=BIT}, #{deleted,jdbcType=BIT}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jnxaread.bean.Chapter">
    insert into chapter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fictionId != null">
        fictionId,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="wordCount != null">
        wordCount,
      </if>
      <if test="viewCount != null">
        viewCount,
      </if>
      <if test="hided != null">
        hided,
      </if>
      <if test="lockedContent != null">
        lockedContent,
      </if>
      <if test="lockedComment != null">
        lockedComment,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fictionId != null">
        #{fictionId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="wordCount != null">
        #{wordCount,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null">
        #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="hided != null">
        #{hided,jdbcType=BIT},
      </if>
      <if test="lockedContent != null">
        #{lockedContent,jdbcType=BIT},
      </if>
      <if test="lockedComment != null">
        #{lockedComment,jdbcType=BIT},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jnxaread.bean.ChapterExample" resultType="java.lang.Long">
    select count(*) from chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update chapter
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.fictionId != null">
        fictionId = #{record.fictionId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        userId = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.wordCount != null">
        wordCount = #{record.wordCount,jdbcType=INTEGER},
      </if>
      <if test="record.viewCount != null">
        viewCount = #{record.viewCount,jdbcType=INTEGER},
      </if>
      <if test="record.hided != null">
        hided = #{record.hided,jdbcType=BIT},
      </if>
      <if test="record.lockedContent != null">
        lockedContent = #{record.lockedContent,jdbcType=BIT},
      </if>
      <if test="record.lockedComment != null">
        lockedComment = #{record.lockedComment,jdbcType=BIT},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update chapter
    set id = #{record.id,jdbcType=INTEGER},
      fictionId = #{record.fictionId,jdbcType=INTEGER},
      userId = #{record.userId,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      number = #{record.number,jdbcType=INTEGER},
      wordCount = #{record.wordCount,jdbcType=INTEGER},
      viewCount = #{record.viewCount,jdbcType=INTEGER},
      hided = #{record.hided,jdbcType=BIT},
      lockedContent = #{record.lockedContent,jdbcType=BIT},
      lockedComment = #{record.lockedComment,jdbcType=BIT},
      deleted = #{record.deleted,jdbcType=BIT},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update chapter
    set id = #{record.id,jdbcType=INTEGER},
      fictionId = #{record.fictionId,jdbcType=INTEGER},
      userId = #{record.userId,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      number = #{record.number,jdbcType=INTEGER},
      wordCount = #{record.wordCount,jdbcType=INTEGER},
      viewCount = #{record.viewCount,jdbcType=INTEGER},
      hided = #{record.hided,jdbcType=BIT},
      lockedContent = #{record.lockedContent,jdbcType=BIT},
      lockedComment = #{record.lockedComment,jdbcType=BIT},
      deleted = #{record.deleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jnxaread.bean.Chapter">
    update chapter
    <set>
      <if test="fictionId != null">
        fictionId = #{fictionId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        userId = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="wordCount != null">
        wordCount = #{wordCount,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null">
        viewCount = #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="hided != null">
        hided = #{hided,jdbcType=BIT},
      </if>
      <if test="lockedContent != null">
        lockedContent = #{lockedContent,jdbcType=BIT},
      </if>
      <if test="lockedComment != null">
        lockedComment = #{lockedComment,jdbcType=BIT},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jnxaread.bean.Chapter">
    update chapter
    set fictionId = #{fictionId,jdbcType=INTEGER},
      userId = #{userId,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      number = #{number,jdbcType=INTEGER},
      wordCount = #{wordCount,jdbcType=INTEGER},
      viewCount = #{viewCount,jdbcType=INTEGER},
      hided = #{hided,jdbcType=BIT},
      lockedContent = #{lockedContent,jdbcType=BIT},
      lockedComment = #{lockedComment,jdbcType=BIT},
      deleted = #{deleted,jdbcType=BIT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jnxaread.bean.Chapter">
    update chapter
    set fictionId = #{fictionId,jdbcType=INTEGER},
      userId = #{userId,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      number = #{number,jdbcType=INTEGER},
      wordCount = #{wordCount,jdbcType=INTEGER},
      viewCount = #{viewCount,jdbcType=INTEGER},
      hided = #{hided,jdbcType=BIT},
      lockedContent = #{lockedContent,jdbcType=BIT},
      lockedComment = #{lockedComment,jdbcType=BIT},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>